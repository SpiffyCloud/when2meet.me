FROM python:3.8-alpine AS build-layer

# Build dependencies
RUN apk update &&\
    apk add --no-cache \
    gcc python3-dev musl-dev \
    postgresql-client postgresql-dev

# Prepare the venv
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
RUN pip install --upgrade pip
COPY ./backend/requirements.txt /requirements.txt
RUN pip install -r /requirements.txt

FROM python:3.8-alpine AS active-layer

# Environment defaults
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PATH="/opt/venv/bin:$PATH"

# Get into the app directory by default
WORKDIR /app

# OS dependencies
RUN apk add --no-cache tini libpq

# Copy over dependencies
COPY --from=build-layer /opt/venv /opt/venv

# Install container scripts
COPY ./docker/backend/*.sh /
RUN chmod +x /*.sh

# Final configuration
EXPOSE 8000
VOLUME ["/app"]

# Entrypoint logic
ENTRYPOINT ["/sbin/tini", "--", "/entrypoint.sh"]
